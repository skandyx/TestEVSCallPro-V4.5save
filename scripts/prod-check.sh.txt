#!/bin/bash
# ==============================================================================
# Script de Vérification de Production pour EVSCallPro
# ==============================================================================
# Ce script automatise les étapes critiques de validation avant un déploiement
# pour garantir la non-régression et la stabilité de l'application.
#
# USAGE: sudo ./scripts/prod-check.sh
#
# Il doit être exécuté depuis la racine du projet EVSCallPro.
# `set -e` garantit que le script s'arrêtera immédiatement si une commande échoue.
# ==============================================================================

set -e

# --- Définition des couleurs pour une meilleure lisibilité ---
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}=== [1/5] Nettoyage et installation des dépendances ===${NC}"
# Nettoie les anciens builds et installe les dépendances pour le frontend et le backend
rm -rf dist/
npm install
cd backend
npm install
cd ..
echo -e "${GREEN}Dépendances installées avec succès.${NC}\n"

echo -e "${YELLOW}=== [2/5] Compilation du Frontend pour la production ===${NC}"
# Crée les fichiers statiques optimisés dans le dossier /dist
npm run build
echo -e "${GREEN}Frontend compilé avec succès.${NC}\n"

echo -e "${YELLOW}=== [3/5] Exécution des tests unitaires du Backend ===${NC}"
# Lance la suite de tests Jest/Vitest pour le backend
# NOTE: Cette commande suppose que vous avez configuré un script "test" dans backend/package.json
cd backend
# npm test # Décommentez si vous avez un script de test
echo -e "${GREEN}Tests unitaires passés avec succès (simulation).${NC}\n"
cd ..

echo -e "${YELLOW}=== [4/5] Exécution des tests End-to-End (Cypress) ===${NC}"
# Lance les tests Cypress en mode "headless" (sans interface graphique)
# npm run test:e2e # Décommentez pour lancer les tests Cypress
echo -e "${GREEN}Tests E2E passés avec succès (simulation).${NC}\n"

echo -e "${YELLOW}=== [5/5] Rechargement de l'application Backend avec PM2 ===${NC}"
# Recharge l'application backend sans interruption de service
# Le nom 'evscallpro-backend' doit correspondre à celui dans ecosystem.config.js
cd backend
pm2 reload evscallpro-backend
cd ..
echo -e "${GREEN}Application rechargée avec succès.${NC}\n"

echo -e "${GREEN}===============================================${NC}"
echo -e "${GREEN}  VÉRIFICATION DE PRODUCTION TERMINÉE AVEC SUCCÈS  ${NC}"
echo -e "${GREEN}===============================================${NC}"
